/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./src/assets/3d-models/hex-grid/HexGrass.glb -r ./src/assets/3d-models/ -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    HexGrass: THREE.Mesh
  }
  materials: {
    M_HexGrass: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/hex-grid/HexGrass.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.HexGrass.geometry} material={materials.M_HexGrass} position={[14, 0, 0]} rotation={[0, 1.571, 0]} />
    </group>
  )
}

useGLTF.preload('/hex-grid/HexGrass.glb')
